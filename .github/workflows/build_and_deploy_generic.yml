name: Library - Build and Deploy API

on:
  workflow_call:
    inputs:
      refspec:
        description: "The commit SHA"
        type: string
        required: True
      docker_tag:
        description: "Docker tag"
        type: string
        required: True
      environment:
        description: "Environment to deploy to"
        type: string
        required: true

jobs:
  docker-ecs:
    name: Build and push docker image for ECS
    runs-on: ubuntu-latest
    steps:
      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_ACCESS_KEY_ID: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_SECRET_ACCESS_KEY
          CLOUDFLARE_API_TOKEN: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/CLOUDFLARE_API_TOKEN
      - id: build_and_push_docker_image
        uses: passportxyz/gh-workflows/.github/actions/build_and_push@v1
        with:
          refspec: ${{ inputs.refspec }}
          docker_tag: ${{ inputs.docker_tag }}
          ecr_repository_name: passport-scorer
          aws_region: us-west-2
          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          dockerfile_name: ./api/Dockerfile
          build_dir: ./api/

  docker-lambda:
    name: Build and push docker image for lambdas
    runs-on: ubuntu-latest
    steps:
      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_ACCESS_KEY_ID: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_SECRET_ACCESS_KEY
      - id: build_and_push_docker_image
        uses: passportxyz/gh-workflows/.github/actions/build_and_push@v1
        with:
          refspec: ${{ inputs.refspec }}
          docker_tag: ${{ inputs.docker_tag }}
          ecr_repository_name: submit-passport-lambdas
          aws_region: us-west-2
          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          dockerfile_name: ./api/aws_lambdas/submit_passport/Dockerfile
          build_dir: ./api/

  docker-indexer:
    name: Build and push docker image for indexer
    runs-on: ubuntu-latest
    steps:
      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_ACCESS_KEY_ID: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_SECRET_ACCESS_KEY
      - id: build_and_push_docker_image
        uses: passportxyz/gh-workflows/.github/actions/build_and_push@v1
        with:
          refspec: ${{ inputs.refspec }}
          docker_tag: ${{ inputs.docker_tag }}
          ecr_repository_name: passport-indexer
          aws_region: us-west-2
          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          dockerfile_name: ./indexer/Dockerfile
          build_dir: ./indexer/

  docker-verifier:
    name: Build and push docker image for verifier
    runs-on: ubuntu-latest
    steps:
      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          AWS_ACCESS_KEY_ID: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_SECRET_ACCESS_KEY
      - id: build_and_push_docker_image
        uses: passportxyz/gh-workflows/.github/actions/build_and_push@v1
        with:
          refspec: ${{ inputs.refspec }}
          docker_tag: ${{ inputs.docker_tag }}
          ecr_repository_name: passport-verifier
          aws_region: us-west-2
          aws_access_key_id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          dockerfile_name: ./verifier/Dockerfile
          build_dir: ./verifier/

  check_migrations:
    needs: [docker-lambda]
    name: Run showmigrations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.refspec }}
          fetch-depth: 0
      - name: Install 1Password CLI
        uses: 1password/install-cli-action@v1
      - name: Configure 1Password Service Account
        uses: 1password/load-secrets-action/configure@v1
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          AWS_ACCESS_KEY_ID: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_SECRET_ACCESS_KEY
          PULUMI_ACCESS_TOKEN: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/PULUMI_ACCESS_TOKEN
      - name: Prepare to Deploy to AWS
        uses: passportxyz/gh-workflows/.github/actions/prepare_deploy_to_aws@v1

      - name: Setup pulumi for showmigrations
        uses: pulumi/actions@v4
        id: pulumi-up
        with:
          stack-name: passportxyz/passport-scorer-ops/${{ inputs.environment }}
          command: up
          work-dir: ./infra/ops
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          PULUMI_ACCESS_TOKEN: ${{ env.PULUMI_ACCESS_TOKEN }}
          AWS_REGION: us-west-2
          DOCKER_IMAGE_TAG: ${{ inputs.docker_tag }}
      - name: Get Lambda Function URL
        run: |
          echo "Extracting Lambda Function URL..."
          URL=$(pulumi stack output lambdaUrl --stack passportxyz/passport-scorer-ops/${{ inputs.environment }})
          echo "LAMBDA_FUNCTION_URL=$URL" >> $GITHUB_ENV
        id: get-lambda-url
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests requests-aws4auth
      - name: Run showmigrations (call lambda function)
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: us-west-2
          LAMBDA_FUNCTION_URL: ${{ env.LAMBDA_FUNCTION_URL }}
        run: |
          python infra/scripts/ops/lambda_call.py

  deploy_preview:
    name: Preview - Deploying AWS Infra
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.refspec }}
          fetch-depth: 0
      - name: Install 1Password CLI
        uses: 1password/install-cli-action@v1
      - name: Configure 1Password Service Account
        uses: 1password/load-secrets-action/configure@v1
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          AWS_ACCESS_KEY_ID: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_SECRET_ACCESS_KEY
          PULUMI_ACCESS_TOKEN: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/PULUMI_ACCESS_TOKEN
          CLOUDFLARE_API_TOKEN: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/CLOUDFLARE_API_TOKEN
      - name: Prepare to Deploy to AWS
        uses: passportxyz/gh-workflows/.github/actions/prepare_deploy_to_aws@v1
      - name: Deploy Preview
        uses: passportxyz/gh-workflows/.github/actions/deploy_to_aws@v1
        with:
          docker_tag: ${{ inputs.docker_tag }}
          stack_name: passportxyz/passport-scorer/${{ inputs.environment }}
          aws_region: us-west-2
          pulumi_command: preview
          pulumi_diff: "true"
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          PULUMI_ACCESS_TOKEN: ${{ env.PULUMI_ACCESS_TOKEN }}
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          CLOUDFLARE_API_TOKEN: ${{ env.CLOUDFLARE_API_TOKEN }}

  deploy_confirm:
    name: Review Approval Pending
    needs: [check_migrations, deploy_preview]
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Approve Release to Review (check pulumi preview)
        if: ${{ inputs.environment != 'review' }}
        run: |
          echo "Ref" ${{ inputs.refspec }}

  deploy_backends:
    name: Deploying AWS Infra
    needs:
      [
        docker-ecs,
        docker-indexer,
        docker-lambda,
        docker-verifier,
        deploy_preview,
        deploy_confirm,
      ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.refspec }}
          fetch-depth: 0
      - name: Install 1Password CLI
        uses: 1password/install-cli-action@v1
      - name: Configure 1Password Service Account
        uses: 1password/load-secrets-action/configure@v1
        with:
          service-account-token: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
      - name: Load secret
        id: op-load-secret
        uses: 1password/load-secrets-action@v1
        with:
          export-env: true
        env:
          AWS_ACCESS_KEY_ID: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/AWS_SECRET_ACCESS_KEY
          PULUMI_ACCESS_TOKEN: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/PULUMI_ACCESS_TOKEN
          CLOUDFLARE_API_TOKEN: op://DevOps/passport-scorer-${{ inputs.environment }}-secrets/ci/CLOUDFLARE_API_TOKEN
      - name: Prepare to Deploy to AWS
        uses: passportxyz/gh-workflows/.github/actions/prepare_deploy_to_aws@v1
      - name: Deploy Review
        uses: passportxyz/gh-workflows/.github/actions/deploy_to_aws@v1
        with:
          docker_tag: ${{ inputs.docker_tag }}
          stack_name: passportxyz/passport-scorer/${{ inputs.environment }}
          pulumi_command: up
          aws_region: us-west-2
          AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}
          PULUMI_ACCESS_TOKEN: ${{ env.PULUMI_ACCESS_TOKEN }}
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
          CLOUDFLARE_API_TOKEN: ${{ env.CLOUDFLARE_API_TOKEN }}
