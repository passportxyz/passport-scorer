name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  api-test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

      postgres:
        image: postgres:12.3-alpine
        env:
          POSTGRES_USER: passport_scorer
          POSTGRES_PASSWORD: passport_scorer_pwd
          POSTGRES_DB: passport_scorer

        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Use Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: 22.14.0

      - name: Install poetry
        run: |
          pip3 install pipx
          pipx ensurepath
          pipx install poetry
          pipx inject poetry poetry-plugin-export

      - name: Generate requirements.txt
        working-directory: ./api
        run: poetry export -f requirements.txt -o requirements.txt --with dev,server

      - name: Install API dependencies
        working-directory: ./api
        run: pip3 install -r requirements.txt

      - name: Django Check
        working-directory: ./api
        env:
          CERAMIC_CACHE_SCORER_ID: ""
          SECRET_KEY: secret-test-value
        run: python manage.py check

      - name: Python Linter Check
        working-directory: ./api
        run: ruff check

      - name: JS / TS Linter Check System Tests
        working-directory: ./system_tests
        run: |
          yarn install
          yarn lint

      - name: JS / TS Linter Check Infra
        working-directory: ./infra
        run: |
          yarn install
          yarn lint

      - name: Run API unittests
        working-directory: ./api
        run: pytest
        env:
          CERAMIC_CACHE_SCORER_ID: ""
          SECRET_KEY: secret-test-value
          DATABASE_URL: postgres://passport_scorer:passport_scorer_pwd@localhost:5432/passport_scorer
          DATA_MODEL_DATABASE_URL: postgres://passport_scorer:passport_scorer_pwd@localhost:5432/passport_scorer
          FF_API_ANALYTICS: on

  ui-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install UI dependencies
        working-directory: ./interface
        run: yarn --frozen-lockfile && yarn build

      - name: Run tests
        working-directory: ./interface
        run: yarn test
