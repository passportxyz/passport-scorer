# Generated by Django 4.2.6 on 2025-10-20 16:00

from django.db import migrations, models

import account.models


def update_embed_rate_limits(apps, schema_editor):
    """
    Update existing embed rate limit values to match normal rate limits:
    - TIER_1: 0/15m -> 125/15m
    - TIER_2: 1000/15m -> 350/15m
    - TIER_3: 3000/15m -> 2000/15m
    - UNLIMITED: unchanged (empty string)
    """
    AccountAPIKey = apps.get_model("account", "AccountAPIKey")

    # Update TIER_1 from "0/15m" to "125/15m"
    AccountAPIKey.objects.filter(embed_rate_limit="0/15m").update(
        embed_rate_limit="125/15m"
    )

    # Update TIER_2 from "1000/15m" to "350/15m"
    AccountAPIKey.objects.filter(embed_rate_limit="1000/15m").update(
        embed_rate_limit="350/15m"
    )

    # Update TIER_3 from "3000/15m" to "2000/15m"
    AccountAPIKey.objects.filter(embed_rate_limit="3000/15m").update(
        embed_rate_limit="2000/15m"
    )


def reverse_embed_rate_limits(apps, schema_editor):
    """
    Reverse the migration by restoring old values.
    """
    AccountAPIKey = apps.get_model("account", "AccountAPIKey")

    # Reverse TIER_1: 125/15m -> 0/15m
    AccountAPIKey.objects.filter(embed_rate_limit="125/15m").update(
        embed_rate_limit="0/15m"
    )

    # Reverse TIER_2: 350/15m -> 1000/15m
    AccountAPIKey.objects.filter(embed_rate_limit="350/15m").update(
        embed_rate_limit="1000/15m"
    )

    # Reverse TIER_3: 2000/15m -> 3000/15m
    AccountAPIKey.objects.filter(embed_rate_limit="2000/15m").update(
        embed_rate_limit="3000/15m"
    )


class Migration(migrations.Migration):
    dependencies = [
        ("account", "0044_add_hashed_key_sha256"),
    ]

    operations = [
        migrations.AlterField(
            model_name="accountapikey",
            name="embed_rate_limit",
            field=models.CharField(
                blank=True,
                choices=[
                    ("125/15m", account.models.EmbedRateLimits["TIER_1"]),
                    ("350/15m", account.models.EmbedRateLimits["TIER_2"]),
                    ("2000/15m", account.models.EmbedRateLimits["TIER_3"]),
                    ("", account.models.EmbedRateLimits["UNLIMITED"]),
                ],
                default="125/15m",
                max_length=20,
                null=True,
            ),
        ),
        migrations.RunPython(update_embed_rate_limits, reverse_embed_rate_limits),
    ]
